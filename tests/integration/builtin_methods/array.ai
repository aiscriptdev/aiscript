// Test file for array methods

// Initialize a test array
let numbers = [10, 5, 8, 3, 1];
print(numbers);  // expect: [10, 5, 8, 3, 1]

// append - Add an item to the end
numbers.append(20);
print(numbers);  // expect: [10, 5, 8, 3, 1, 20]

// extend - Extend with another array
numbers.extend([30, 40]);
print(numbers);  // expect: [10, 5, 8, 3, 1, 20, 30, 40]

// insert - Insert an item at position
numbers.insert(2, 15);
print(numbers);  // expect: [10, 5, 15, 8, 3, 1, 20, 30, 40]

// index - Find position of value
let pos = numbers.index(15);
print(pos);  // expect: 2

// Trying to find with range parameters
let pos2 = numbers.index(3, 0, 6);
print(pos2);  // expect: 4

// count - Count occurrences
numbers.append(3);
print(numbers.count(3));  // expect: 2

// sort - Sort the array
let sorted = numbers.sort();
print(sorted);  // expect: [1, 3, 3, 5, 8, 10, 15, 20, 30, 40]
print(sorted == numbers);  // expect: true

// sort reverse - Sort in descending order
numbers.sort(true);
print(numbers);  // expect: [40, 30, 20, 15, 10, 8, 5, 3, 3, 1]

// reverse - Reverse the order
numbers.reverse();
print(numbers);  // expect: [1, 3, 3, 5, 8, 10, 15, 20, 30, 40]

// pop - Remove and return item
let popped = numbers.pop();
print(popped);  // expect: 40
print(numbers);  // expect: [1, 3, 3, 5, 8, 10, 15, 20, 30]

// pop with index - Remove and return item at index
let popped_index = numbers.pop(1);
print(popped_index);  // expect: 3
print(numbers);  // expect: [1, 3, 5, 8, 10, 15, 20, 30]

// remove - Remove by value
numbers.remove(15);
print(numbers);  // expect: [1, 3, 5, 8, 10, 20, 30]

// Method chaining
let chained = [1, 2, 3].append(4).append(5);
print(chained);  // expect: [1, 2, 3, 4, 5]

// Working with mixed type arrays
let mixed = ["hello", 42, true];
mixed.append("world");
print(mixed);  // expect: [hello, 42, true, world]

// Working with empty arrays
let empty = [];
empty.append(1);
print(empty);  // expect: [1]

// clear - Remove all items
numbers.clear();
print(numbers);  // expect: []

let nums = [1, 5, 2, 4, 3].sort();
print(nums.pop(0));  // expect: 1
print(nums);  // expect: [2, 3, 4, 5]

// Appending to one array doesn't affect others
let arr1 = [1, 2, 3];
let arr2 = [1, 2, 3];
arr1.append(4);
print(arr1);  // expect: [1, 2, 3, 4]
print(arr2);  // expect: [1, 2, 3]

// More complex use cases
let people = [
    {name: "Alice", age: 30},
    {name: "Bob", age: 25},
    {name: "Charlie", age: 35}
];

people.append({name: "Dave", age: 20});
print(len(people));  // expect: 4
